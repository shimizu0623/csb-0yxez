{"version":3,"sources":["components/InputTodo.jsx","components/IncompletePlaces.jsx","components/CompletePlaces.jsx","components/IncompleteFood.jsx","components/CompleteFood.jsx","App.jsx","index.js"],"names":["style","backgroundColor","textAlign","borderRadius","height","inputstyle","border","width","margin","outline","selectStyle","InputTodo","props","todoText","onChange","place","food","placeholder","value","onClick","name","id","minHeight","IncompletePlaces","incomplete","onClickComplete","onClickDelete","onClickEdit","className","map","toPlace","index","type","CompletePlaces","complete","onClickBack","toCompletePlace","fontSize","IncompleteFood","toFood","CompleteFood","toCompleteFood","App","useState","setTodoText","incompletePlaces","setIncompletePlaces","completePlaces","setCompletePlaces","incompleteFoods","setIncompleteFoods","completeFoods","setCompleteFoods","event","target","newPlaceTodos","newFoodTodos","newIncompletePlace","splice","newCompletePlace","DeletePlace","EditPlace","Edit","BackPlace","newPlace","newInCompleteFoods","newCompleteFood","DeleteFood","EditFood","BackFood","newFood","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86d65d07.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst style = {\r\n  backgroundColor: \"rgb(240, 193, 233)\",\r\n  textAlign: \"center\",\r\n  borderRadius: \"5px\",\r\n  height: \"35px\"\r\n};\r\n\r\nconst inputstyle = {\r\n  border: \"none\",\r\n  borderRadius: \"10px\",\r\n  width: \"250px\",\r\n  height: \"25px\",\r\n  margin: \"5px 0\",\r\n  outline: \"none\"\r\n};\r\n\r\nconst selectStyle = {\r\n  height: \"25px\",\r\n  borderRadius: \"10px\"\r\n};\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, place, food } = props;\r\n  return (\r\n    <div style={style}>\r\n      <input\r\n        placeholder=\"メモを入力\"\r\n        value={todoText}\r\n        onChange={onChange}\r\n        style={inputstyle}\r\n      />\r\n      <button onClick={place}>行きたいところに追加</button>\r\n      <button onClick={food}>グルメに追加</button>\r\n      <select name=\"Italy-places\" id=\"Italy-places\" style={selectStyle}>\r\n        <option value=\"Milan\">Milan</option>\r\n        <option value=\"Venezia\">Venezia</option>\r\n        <option value=\"Dolomiti\">Dolomiti</option>\r\n        <option value=\"Firenze\">Firenze</option>\r\n        <option value=\"Rome\">Rome</option>\r\n        <option value=\"Naples\">Naples</option>\r\n        <option value=\"Sicily\">Sicily</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst style = {\r\n  backgroundColor: \"rgb(247, 203, 210)\",\r\n  borderRadius: \"5px\",\r\n  minHeight: \"350px\"\r\n};\r\n\r\nexport const IncompletePlaces = (props) => {\r\n  const { incomplete, onClickComplete, onClickDelete, onClickEdit } = props;\r\n  return (\r\n    <div style={style} className=\"place-list\">\r\n      <div className=\"place-title\">\r\n        <p>行きたいところ</p>\r\n      </div>\r\n\r\n      {incomplete.map((toPlace, index) => {\r\n        return (\r\n          <div key={toPlace} className=\"place\">\r\n            <label>\r\n              <input type=\"checkbox\" onClick={() => onClickComplete(index)} />\r\n              {toPlace}\r\n            </label>\r\n            <button onClick={() => onClickEdit(index)}>編集</button>\r\n            <button onClick={() => onClickDelete(index)}>削除</button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CompletePlaces = (props) => {\r\n  const { complete, onClickBack } = props;\r\n  return (\r\n    <div className=\"finished-placeList\">\r\n      <p>達成</p>\r\n      {complete.map((toCompletePlace, index) => {\r\n        return (\r\n          <div key={toCompletePlace}>\r\n            ■{toCompletePlace}\r\n            <button onClick={() => onClickBack(index)}>戻す</button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst style = {\r\n  fontSize: \"20px\",\r\n  backgroundColor: \"rgb(201, 226, 247)\",\r\n  borderRadius: \"5px\",\r\n  minHeight: \"350px\"\r\n};\r\n\r\nexport const IncompleteFood = (props) => {\r\n  const { incomplete, onClickComplete, onClickDelete, onClickEdit } = props;\r\n  return (\r\n    <div style={style} className=\"food\">\r\n      <div className=\"food-title\">\r\n        <p>グルメ</p>\r\n      </div>\r\n\r\n      {incomplete.map((toFood, index) => {\r\n        return (\r\n          <div key={toFood} className=\"todo\">\r\n            <label>\r\n              <input type=\"checkbox\" onClick={() => onClickComplete(index)} />\r\n              {toFood}\r\n            </label>\r\n            <button onClick={() => onClickEdit(index)}>編集</button>\r\n            <button onClick={() => onClickDelete(index)}>削除</button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CompleteFood = (props) => {\r\n  const { complete, onClickBack } = props;\r\n  return (\r\n    <div className=\"finished-foodList\">\r\n      <p>達成</p>\r\n      {complete.map((toCompleteFood, index) => {\r\n        return (\r\n          <div key={toCompleteFood}>\r\n            ■{toCompleteFood}\r\n            <button onClick={() => onClickBack(index)}>戻す</button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompletePlaces } from \"./components/IncompletePlaces\";\nimport { CompletePlaces } from \"./components/CompletePlaces\";\nimport { IncompleteFood } from \"./components/IncompleteFood\";\nimport { CompleteFood } from \"./components/CompleteFood\";\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n\n  const [incompletePlaces, setIncompletePlaces] = useState([\n    \"スペイン広場周辺　Piazza di Spagna\",\n    \"テスタッチョ　Testaccio\",\n    \"コロッセオ　Colosseo\"\n  ]);\n  const [completePlaces, setCompletePlaces] = useState([\n    \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n  ]);\n\n  const [incompleteFoods, setIncompleteFoods] = useState([\n    \"ダ・ブカティーノ(Da Bucatino)\",\n    \"イル・フィーコ(Il Fico)\"\n  ]);\n\n  const [completeFoods, setCompleteFoods] = useState([\n    \"サン・ピエトロ大聖堂 Basilica di San Pietro\"\n  ]);\n\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  const onClickPlaceAdd = () => {\n    if (todoText === \"\") return;\n    const newPlaceTodos = [...incompletePlaces, todoText];\n    setIncompletePlaces(newPlaceTodos);\n    setTodoText(\"\");\n  };\n  const onClickFoodAdd = () => {\n    if (todoText === \"\") return;\n    const newFoodTodos = [...incompleteFoods, todoText];\n    setIncompleteFoods(newFoodTodos);\n    setTodoText(\"\");\n  };\n\n  const onClickCompletePlace = (index) => {\n    const newIncompletePlace = [...incompletePlaces];\n    newIncompletePlace.splice(index, 1);\n\n    const newCompletePlace = [...completePlaces, incompletePlaces[index]];\n    setIncompletePlaces(newIncompletePlace);\n    setCompletePlaces(newCompletePlace);\n  };\n\n  const onClickCompleteFood = (index) => {\n    const newInCompleteFoods = [...incompleteFoods];\n    newInCompleteFoods.splice(index, 1);\n\n    const newCompleteFood = [...completeFoods, incompleteFoods[index]];\n    setIncompleteFoods(newInCompleteFoods);\n    setCompleteFoods(newCompleteFood);\n  };\n\n  const onClickDeletePlace = (index) => {\n    const DeletePlace = [...incompletePlaces];\n    DeletePlace.splice(index, 1);\n    setIncompletePlaces(DeletePlace);\n  };\n\n  const onClickDeleteFood = (index) => {\n    const DeleteFood = [...incompleteFoods];\n    DeleteFood.splice(index, 1);\n    setIncompleteFoods(DeleteFood);\n  };\n\n  const onClickEditPlace = (index) => {\n    const EditPlace = [...incompletePlaces];\n    EditPlace.splice(index, 1);\n\n    setIncompletePlaces(EditPlace);\n\n    const Edit = [incompletePlaces[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickEditFood = (index) => {\n    const EditFood = [...incompleteFoods];\n    EditFood.splice(index, 1);\n\n    setIncompleteFoods(EditFood);\n\n    const Edit = [incompleteFoods[index]];\n    setTodoText(Edit);\n  };\n\n  const onClickBackPlace = (index) => {\n    const BackPlace = [...completePlaces];\n    BackPlace.splice(index, 1);\n\n    const newPlace = [...incompletePlaces, completePlaces[index]];\n\n    setCompletePlaces(BackPlace);\n    setIncompletePlaces(newPlace);\n  };\n\n  const onClickBackFood = (index) => {\n    const BackFood = [...completeFoods];\n    BackFood.splice(index, 1);\n\n    const newFood = [...incompleteFoods, completeFoods[index]];\n\n    setCompleteFoods(BackFood);\n    setIncompleteFoods(newFood);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        place={onClickPlaceAdd}\n        food={onClickFoodAdd}\n      />\n      <IncompletePlaces\n        incomplete={incompletePlaces}\n        onClickComplete={onClickCompletePlace}\n        onClickDelete={onClickDeletePlace}\n        onClickEdit={onClickEditPlace}\n      />\n\n      <CompletePlaces\n        complete={completePlaces}\n        onClickBack={onClickBackPlace}\n      />\n\n      <IncompleteFood\n        incomplete={incompleteFoods}\n        onClickComplete={onClickCompleteFood}\n        onClickDelete={onClickDeleteFood}\n        onClickEdit={onClickEditFood}\n      />\n\n      <CompleteFood complete={completeFoods} onClickBack={onClickBackFood} />\n    </>\n  );\n};\n","import { React } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}